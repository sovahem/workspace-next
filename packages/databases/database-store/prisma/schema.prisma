// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// generator zod {
//   provider                 = "zod-prisma"
//   output                   = "./zod" // (default) the directory where generated zod schemas will be saved

//   relationModel            = true // (default) Create and export both plain and related models.
//   // relationModel         = "default" // Do not export model without relations.
//   // relationModel         = false // Do not generate related model

//   modelCase                = "PascalCase" // (default) Output models using pascal case (ex. UserModel, PostModel)
//   // modelCase             = "camelCase" // Output models using camel case (ex. userModel, postModel)

//   modelSuffix              = "Model" // (default) Suffix to apply to your prisma models when naming Zod schemas

//   // useDecimalJs          = false // (default) represent the prisma Decimal type using as a JS number
//   useDecimalJs             = true // represent the prisma Decimal type using Decimal.js (as Prisma does)

//   // imports                  = null // (default) will import the referenced file in generated schemas to be used via imports.someExportedVariable

//   // https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
//   prismaJsonNullability    = true // (default) uses prisma's scheme for JSON field nullability
//   // prismaJsonNullability = false // allows null assignment to optional JSON fields
// }



model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
   id                String    @id @default(uuid())
  name          String?
  email         String?   @unique
  password      String
  emailVerified DateTime?
  image         String?
  created_at        DateTime  @default(now())
  last_updated_at   DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Layout {
  id                String    @id @default(uuid())
  logo String
  logo_2 String
  banner_desk String
  banner_mob String
  email String
  announcement_1 String?
  announcement_2 String?
  footer_message String?
  terms_of_service_label String? @default("")
  terms_of_service String?
  privacy_policy_label String? @default("")
  privacy_policy String?
  refund_policy_label String? @default("")
  refund_policy String?
  consent_cookie_title String @default("")
  consent_cookie_text String @default("")
  consent_cookie_label_link String @default("")
  consent_confirm_label String @default("")
  consent_reject_label String @default("")
  message_1 String?
  message_2 String?
  instagram String?
  tiktok String?
  facebook String?
  created_at        DateTime  @default(now())
  last_updated_at   DateTime  @updatedAt
}

model Category {
  id                String    @id @default(uuid())
  name              String
  products          Product[]
  type              String @default("physical_products")
  created_at        DateTime  @default(now())
  last_updated_at   DateTime  @updatedAt
}

model Product {
  id                             String                      @id @default(uuid())
  category                       Category                    @relation(fields: [category_id], references: [id])
  category_id                    String
  title                          String
  description                    String
  supplier                       String? @default("")
  delivery_time                  String? @default("")
  purchase_price                 Decimal                     @default(0)
  selling_price                  Decimal
  sale                           Decimal                     @default(0)
  created_at                     DateTime                    @default(now())
  last_updated_at                DateTime                    @updatedAt
  product_images                 ProductImage[] 
  product_variants_combinations  ProductVariantCombination[]
  orders_products                OrderProduct[]
  product_variants               ProductVariant[]
  product_pricing_adjustments        ProductPricingAdjustment[]

}

model ProductRental {
  id            String   @id @default(uuid())
  created_at    DateTime @default(now())
  last_updated_at DateTime @updatedAt
  product_variant_combination       ProductVariantCombination  @relation(fields: [product_variant_combination_id], references: [id], onDelete: Cascade)
  product_variant_combination_id    String @default("")
  order         Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id      String
  date_from     DateTime
  date_to       DateTime
}

model Variant {
  id                String            @id @default(uuid())
  name              String
  created_at        DateTime          @default(now())
  last_updated_at   DateTime          @updatedAt
  icon              String?           @default("")
  options   VariantOption[]
  product_variants ProductVariant[]
}

model ProductPricingAdjustment {
  id                String    @id @default(uuid())
  pricing_adjustment    PricingAdjustment                 @relation(fields: [pricing_adjustment_id], references: [id], onDelete: Cascade)
  pricing_adjustment_id        String
  product           Product                 @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id        String
  value             Decimal   @default(0)
  rank              Int       @default(0)
  type              String @default("fixed")
  created_at        DateTime  @default(now())
  last_updated_at   DateTime  @updatedAt
}

model PricingAdjustment {
  id                             String                      @id @default(uuid())
  name                           String
  type                           String                      @default("repeat")
  months                         Int[]
  days                           Int[]    
  created_at                     DateTime                    @default(now())
  last_updated_at                DateTime                    @updatedAt
  hours     PricingAdjustmentHour[]
  specifics_date PricingAdjustmentSpecificDate[]
  product_pricing_adjustments        ProductPricingAdjustment[]
}

model PricingAdjustmentHour {
  id                             String                      @id @default(uuid())
  pricing_adjustment             PricingAdjustment  @relation(fields: [pricing_adjustment_id], references: [id])
  pricing_adjustment_id         String   
  start_hour                     String
  end_hour                       String
  created_at                     DateTime                    @default(now())
  last_updated_at                DateTime                    @updatedAt
}


model PricingAdjustmentSpecificDate {
  id                             String                      @id @default(uuid())
  pricing_adjustment             PricingAdjustment  @relation(fields: [pricing_adjustment_id], references: [id])
  pricing_adjustment_id         String   
  from                        DateTime?
  to                          DateTime?
  created_at                     DateTime                    @default(now())
  last_updated_at                DateTime                    @updatedAt
}

model VariantOption {
  id                        String                  @id @default(uuid())
  value                     String
  order                     Int?                    @default(0)
  variant                   Variant                 @relation(fields: [variant_id], references: [id], onDelete: Cascade)
  variant_id                String
  product_images            ProductImage[]
  created_at                DateTime                @default(now())
  last_updated_at           DateTime                @updatedAt
  product_variants_options  ProductVariantOption[]
}

model ProductVariant {
  id                String    @id @default(uuid())
  variant           Variant                 @relation(fields: [variant_id], references: [id])
  variant_id        String
  product           Product                 @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id        String
  created_at        DateTime  @default(now())
  last_updated_at   DateTime  @updatedAt
}


 
model ProductVariantCombination {
  id                             String                  @id @default(uuid())
  ref                            String
  purchase_price                 Decimal                 @default(0)
  selling_price                  Decimal
  week_end_price                 Decimal?                 @default(0)
  more_than_seven_days_price     Decimal?                 @default(0)
  sale                           Decimal                 @default(0)
  caution                        Decimal                 @default(0)
  quantity_in_stock              Int
  product                        Product                 @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id                     String
  id_stripe                      String                  @default("")
  default_price_stripe           String                  @default("")
  created_at                     DateTime                @default(now())
  last_updated_at                DateTime                @updatedAt
  product_variants_options       ProductVariantOption[]
  orders_products                OrderProduct[]
  product_rentals ProductRental[]
}

model ProductVariantOption {
  id                             String                      @id @default(uuid())
  product_variant_combination    ProductVariantCombination   @relation(fields: [product_variant_combination_id], references: [id], onDelete: Cascade)
  product_variant_combination_id String 
  variant_option                 VariantOption               @relation(fields: [variant_option_id], references: [id])
  variant_option_id              String
  created_at                     DateTime                    @default(now())
  last_updated_at                DateTime                    @updatedAt
}



model ProductImage {
  id                  String         @id @default(uuid())
  type                String         @default("image")
  filename            String
  is_main             Boolean        @default(false)
  variant_option      VariantOption? @relation(fields: [variant_option_id], references: [id])
  variant_option_id   String?        
  product             Product        @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id          String
  created_at          DateTime       @default(now())
  last_updated_at     DateTime       @updatedAt
}

model DeliveryCity {
  id                  String          @id @default(uuid())
  name                String          @unique
  shipping_fees       Decimal         @default(0)
  created_at          DateTime        @default(now())
  last_updated_at     DateTime        @updatedAt
  orders              Order[]
}

model Order {
  id                  String          @id @default(uuid())
  lastname            String?         @default("")
  firstname           String?         @default("")
  email               String?         @default("")
  address             String?         @default("")
  postal_code         String?         @default("")
  city                String?         @default("")
  country             String?         @default("")
  phone               String?         @default("")
  status              String?         @default("")
  stripe_payment_id              String?         @default("")
  stripe_caution_id              String?         @default("")
  stripe_customer_id              String?         @default("")
  stripe_refunds_id   String[]    @default([])
  order_number        String?          @default("TEMP")      
  payment_option      String  @default("TEMP")
  delivery_city       DeliveryCity?    @relation(fields: [delivery_city_id], references: [id])
  delivery_city_id    String?
  nif                 String?          @default("")   
  created_at          DateTime        @default(now())
  last_updated_at     DateTime        @updatedAt
  orders_products     OrderProduct[]
  product_rentals ProductRental[]
}

model OrderProduct {
  id                             String                  @id @default(uuid())
  order                          Order                   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id                       String
  product                        Product                 @relation(fields: [product_id], references: [id])
  product_id                     String                  
  product_variant_combination    ProductVariantCombination   @relation(fields: [product_variant_combination_id], references: [id])
  product_variant_combination_id String
  price                          Decimal
  quantity                       Int
  sale                           Decimal
  name                           String
  created_at                     DateTime                @default(now())
  last_updated_at                DateTime                @updatedAt
  orders_products_options        OrderProductOption[]
}

model OrderProductOption {
  id                  String        @id @default(uuid())
  order_product       OrderProduct  @relation(fields: [order_product_id], references: [id], onDelete: Cascade)
  order_product_id    String
  option_name         String
  option_value        String
  created_at          DateTime      @default(now())
  last_updated_at     DateTime      @updatedAt
}


// CREATE SEQUENCE order_number_seq;

// CREATE OR REPLACE FUNCTION generate_commande_number() RETURNS TRIGGER AS $$
// BEGIN
//   NEW.order_number := TO_CHAR(NOW(), 'YYYYMMDDHH24MISS') || '-' || nextval('order_number_seq');
//   RETURN NEW;
// END;
// $$ LANGUAGE plpgsql;

// CREATE TRIGGER before_commande_insert
// BEFORE INSERT ON "Order"
// FOR EACH ROW
// EXECUTE FUNCTION generate_commande_number();

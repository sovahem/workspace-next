// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_option from "rescript/lib/es6/js_option.js";
import * as Utils from "../../../lib/utils";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as ClassVarianceAuthority from "class-variance-authority";

var Terminal = {};

var variants = ClassVarianceAuthority.cva(
  "relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  },
);

var AlertVariants = {
  variants: variants,
};

function Alert$AlertTitle(props) {
  return JsxRuntime.jsx("h5", {
    children: props.children,
    className: Utils.cn([
      "mb-1 font-medium leading-none tracking-tight",
      Js_option.getWithDefault("", props.className),
    ]),
  });
}

var AlertTitle = {
  make: Alert$AlertTitle,
};

function Alert$AlertDescription(props) {
  return JsxRuntime.jsx("div", {
    children: props.children,
    className: Utils.cn([
      "text-sm [&_p]:leading-relaxed",
      Js_option.getWithDefault("", props.className),
    ]),
  });
}

var AlertDescription = {
  make: Alert$AlertDescription,
};

function Alert$Make(props) {
  var __className = props.className;
  var icon = props.icon;
  var __variant = props.variant;
  var variant = __variant !== undefined ? __variant : "default";
  var className = __className !== undefined ? __className : "";
  return JsxRuntime.jsxs("div", {
    children: [
      icon !== undefined ? Caml_option.valFromOption(icon) : null,
      JsxRuntime.jsx(Alert$AlertTitle, {
        children: props.title,
      }),
      JsxRuntime.jsx(Alert$AlertDescription, {
        children: props.description,
      }),
    ],
    className: Utils.cn([variants(variant), className]),
    role: "alert",
  });
}

var Make = {
  make: Alert$Make,
};

export { Terminal, AlertVariants, AlertTitle, AlertDescription, Make };
/* variants Not a pure module */
